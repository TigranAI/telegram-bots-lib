package ru.tigran.telegram.bots.api.model.dto

import ru.tigran.telegram.bots.api.model.ApiGodDto
import ru.tigran.telegram.bots.api.model.enums.ChatType

data class ChatFullInfoApi(
    val id: Long,
    val type: ChatType,
    val title: String?,
    val username: String?,
    val firstName: String?,
    val lastName: String?,
    val isForum: Boolean?,
    val accentColorId: Int?,
    val maxReactionCount: Int?,
    val photo: ChatPhoto?,
    val activeUsernames: List<String>?,
    val birthdate: Birthdate?,
    val businessIntro: BusinessIntro?,
    val businessLocation: BusinessLocation?,
    val businessOpeningHours: BusinessOpeningHours?,
    val personalChat: Chat?,
    val availableReactions: List<ReactionApi>?,
    val backgroundCustomEmojiId: String?,
    val profileAccentColorId: Int?,
    val profileBackgroundCustomEmojiId: String?,
    val emojiStatusCustomEmojiId: String?,
    val emojiStatusExpirationDate: Long?,
    val bio: String?,
    val hasPrivateForwards: Boolean?,
    val hasRestrictedVoiceAndVideoMessages: Boolean?,
    val joinToSendMessages: Boolean?,
    val joinByRequest: Boolean?,
    val description: String?,
    val inviteLink: String?,
    val pinnedMessage: MessageApi?,
    val permissions: ChatPermissions?,
    val canSendPaidMedia: Boolean?,
    val slowModeDelay: Int?,
    val unrestrictBoostCount: Int?,
    val messageAutoDeleteTime: Int?,
    val hasAggressiveAntiSpamEnabled: Boolean?,
    val hasHiddenMembers: Boolean?,
    val hasProtectedContent: Boolean?,
    val hasVisibleStory: Boolean?,
    val stickerSetName: String?,
    val canSetStickerSet: Boolean?,
    val customEmojiStickerSetName: String?,
    val linkedChatId: Long?,
    val location: ChatLocation?,
) : ApiGodDto<ChatFullInfo> {
    override fun typify() = ChatFullInfo(
        id = id,
        type = type,
        title = title,
        username = username,
        firstName = firstName,
        lastName = lastName,
        isForum = isForum,
        accentColorId = accentColorId,
        maxReactionCount = maxReactionCount,
        photo = photo,
        activeUsernames = activeUsernames,
        birthdate = birthdate,
        businessIntro = businessIntro,
        businessLocation = businessLocation,
        businessOpeningHours = businessOpeningHours,
        personalChat = personalChat,
        availableReactions = availableReactions?.map { it.typify() },
        backgroundCustomEmojiId = backgroundCustomEmojiId,
        profileAccentColorId = profileAccentColorId,
        profileBackgroundCustomEmojiId = profileBackgroundCustomEmojiId,
        emojiStatusCustomEmojiId = emojiStatusCustomEmojiId,
        emojiStatusExpirationDate = emojiStatusExpirationDate,
        bio = bio,
        hasPrivateForwards = hasPrivateForwards,
        hasRestrictedVoiceAndVideoMessages = hasRestrictedVoiceAndVideoMessages,
        joinToSendMessages = joinToSendMessages,
        joinByRequest = joinByRequest,
        description = description,
        inviteLink = inviteLink,
        pinnedMessage = pinnedMessage?.typify(),
        permissions = permissions,
        canSendPaidMedia = canSendPaidMedia,
        slowModeDelay = slowModeDelay,
        unrestrictBoostCount = unrestrictBoostCount,
        messageAutoDeleteTime = messageAutoDeleteTime,
        hasAggressiveAntiSpamEnabled = hasAggressiveAntiSpamEnabled,
        hasHiddenMembers = hasHiddenMembers,
        hasProtectedContent = hasProtectedContent,
        hasVisibleStory = hasVisibleStory,
        stickerSetName = stickerSetName,
        canSetStickerSet = canSetStickerSet,
        customEmojiStickerSetName = customEmojiStickerSetName,
        linkedChatId = linkedChatId,
        location = location,
    )
}

data class ChatFullInfo(
    val id: Long,
    val type: ChatType,
    val title: String?,
    val username: String?,
    val firstName: String?,
    val lastName: String?,
    val isForum: Boolean?,
    val accentColorId: Int?,
    val maxReactionCount: Int?,
    val photo: ChatPhoto?,
    val activeUsernames: List<String>?,
    val birthdate: Birthdate?,
    val businessIntro: BusinessIntro?,
    val businessLocation: BusinessLocation?,
    val businessOpeningHours: BusinessOpeningHours?,
    val personalChat: Chat?,
    val availableReactions: List<Reaction>?,
    val backgroundCustomEmojiId: String?,
    val profileAccentColorId: Int?,
    val profileBackgroundCustomEmojiId: String?,
    val emojiStatusCustomEmojiId: String?,
    val emojiStatusExpirationDate: Long?,
    val bio: String?,
    val hasPrivateForwards: Boolean?,
    val hasRestrictedVoiceAndVideoMessages: Boolean?,
    val joinToSendMessages: Boolean?,
    val joinByRequest: Boolean?,
    val description: String?,
    val inviteLink: String?,
    val pinnedMessage: Message?,
    val permissions: ChatPermissions?,
    val canSendPaidMedia: Boolean?,
    val slowModeDelay: Int?,
    val unrestrictBoostCount: Int?,
    val messageAutoDeleteTime: Int?,
    val hasAggressiveAntiSpamEnabled: Boolean?,
    val hasHiddenMembers: Boolean?,
    val hasProtectedContent: Boolean?,
    val hasVisibleStory: Boolean?,
    val stickerSetName: String?,
    val canSetStickerSet: Boolean?,
    val customEmojiStickerSetName: String?,
    val linkedChatId: Long?,
    val location: ChatLocation?,
)